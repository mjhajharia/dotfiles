---
title: "Eight Schools"
version: 0.1
author: ""
date: ""
execute: 
  daemon: 99999
  cache: true
figures:
  fig-format: png
toc: false
monobackgroundcolor: "#FFFFFF"
mainfont: "Palatino"
---

```{julia}
using DataFrames, LinearAlgebra, Plots, ColorSchemes, LaTeXStrings, CSV
Plots.theme(:mute)
```


```{julia}
include("utils.jl")
```
```{julia}
unc_sample_array, hessian_df_cholesky, hessian_df_ZCA, hessian_df_PCA = retrieve_data_all("eight_schools-eight_schools_centered");

unc_sample_array_nc, hessian_df_cholesky_nc, hessian_df_ZCA_nc, hessian_df_PCA_nc = retrieve_data_all("eight_schools-eight_schools_noncentered");
```

```{julia}
all(isapprox.(hessian_df_PCA_nc[:, 2], hessian_df_ZCA_nc[:, 2], atol=1e-5))
```
```{julia}
all(isapprox.(hessian_df_PCA_nc[:, 2], hessian_df_cholesky_nc[:, 2], atol=1e-5))
```

### Funnel Plots

```{julia}
funnel_plots(scatter(unc_sample_array[:, 1], unc_sample_array[:, end], alpha=0.1, label="Centered"))
```

```{julia}
funnel_plots(scatter(unc_sample_array_nc[:, 1], unc_sample_array_nc[:, end], alpha=0.1, label="Non-Centered"))
```

## Whitening Transform

Transformation: $L^{T} H L$, where $\Sigma^{-1} = L L^{T}$ 

```{julia}
funnel_plots(scatter(unc_sample_array[:, 1], unc_sample_array[:, end], alpha=0.1, label="log(Condition Number of Hessian)", 
zcolor=log.(hessian_df_cholesky[!, "CN_Hessian"]);), "Centered Model")
```

```{julia}
funnel_plots(scatter(unc_sample_array[:, 1], unc_sample_array[:, end], alpha=0.1, label="log(Condition Number of Transformed Hessian)", 
zcolor=log.(hessian_df_cholesky[!, "CN_Transformed_Hessian"]);), "Centered Model")
```

```{julia}
funnel_plots(scatter(unc_sample_array_nc[:, 1], unc_sample_array_nc[:, end], alpha=0.1, label="log(Condition Number of Hessian)", 
zcolor=log.(hessian_df_cholesky_nc[!, "CN_Hessian"]);), "Non-Centered Model")
```

```{julia}
funnel_plots(scatter(unc_sample_array_nc[:, 1], unc_sample_array_nc[:, end], alpha=0.1, label="log(Condition Number of Transformed Hessian)", 
zcolor=log.(hessian_df_cholesky_nc[!, "CN_Transformed_Hessian"]);), "Non-Centered Model")
```

#### Comparing Whitening Transforms

$\mathrm{ZCA}$ = $U\Lambda^{\frac{1}{2}}U^{T}$

$\mathrm{PCA}$ = $\Lambda^{\frac{1}{2}}U^{T}$

$\mathrm{Cholesky}$ = $L$

#### Cholesky


```{julia}
scatter(hessian_df_cholesky[:, :CN_Hessian], hessian_df_cholesky[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Centered", font="Palatino")
scatter!(hessian_df_cholesky_nc[:, :CN_Hessian], hessian_df_cholesky_nc[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Non Centered")


title!("Cholesky Whitening\n\n Condition Number of Hessian vs Transformed Hessian (on a log scale)")

Plots.abline!(1, 0, line=:dash, label="")
plot!(xaxis = L"\mathrm{\kappa(\mathbf{H})}", yaxis = L"\mathrm{\kappa(\mathbf{H_{T}})}",
titlefontsize=10, fontfamily="Palatino")
```

#### ZCA


```{julia}
scatter(hessian_df_ZCA[:, :CN_Hessian], hessian_df_ZCA[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Centered", font="Palatino")
scatter!(hessian_df_ZCA_nc[:, :CN_Hessian], hessian_df_ZCA_nc[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Non Centered")

title!("ZCA Whitening\n\n Condition Number of Hessian vs Transformed Hessian (on a log scale)")

Plots.abline!(1, 0, line=:dash, label="")
plot!(xaxis = L"\mathrm{\kappa(\mathbf{H})}", yaxis = L"\mathrm{\kappa(\mathbf{H_{T}})}",
titlefontsize=10, fontfamily="Palatino")
```

#### PCA


```{julia}
scatter(hessian_df_PCA[:, :CN_Hessian], hessian_df_PCA[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Centered")
scatter!(hessian_df_PCA_nc[:, :CN_Hessian], hessian_df_PCA_nc[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Non Centered")

title!("PCA Whitening\n\n Condition Number of Hessian vs Transformed Hessian (on a log scale)")

Plots.abline!(1, 0, line=:dash, label="")
plot!(xaxis = L"\mathrm{\kappa(\mathbf{H})}", yaxis = L"\mathrm{\kappa(\mathbf{H_{T}})}",
titlefontsize=10, fontfamily="Palatino")
```

#### Centered: Comparing Cholesky, ZCA and PCA 


```{julia}
scatter(hessian_df_PCA[:, :CN_Hessian], hessian_df_PCA[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="PCA", font="Palatino")
scatter!(hessian_df_ZCA[:, :CN_Hessian], hessian_df_ZCA[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="ZCA", font="Palatino")
scatter!(hessian_df_cholesky[:, :CN_Hessian], hessian_df_cholesky[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Cholesky", font="Palatino")

title!("Centered Model\n\n Condition Number of Hessian vs Transformed Hessian (on a log scale)")

Plots.abline!(1, 0, line=:dash, label="")
plot!(xaxis = L"\mathrm{\kappa(\mathbf{H})}", yaxis = L"\mathrm{\kappa(\mathbf{H_{T}})}",
titlefontsize=10, fontfamily="Palatino")
```

#### Non-Centered: Comparing Cholesky, ZCA and PCA 


```{julia}
scatter(hessian_df_PCA_nc[:, :CN_Hessian], hessian_df_PCA_nc[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="PCA", font="Palatino")
scatter!(hessian_df_ZCA_nc[:, :CN_Hessian], hessian_df_ZCA_nc[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="ZCA", font="Palatino")
scatter!(hessian_df_cholesky_nc[:, :CN_Hessian], hessian_df_cholesky_nc[:, :CN_Transformed_Hessian], xaxis=:log, yaxis=:log, alpha=0.1, label="Cholesky", font="Palatino")

title!("Non-Centered Model\n\n Condition Number of Hessian vs Transformed Hessian (on a log scale)")

Plots.abline!(1, 0, line=:dash, label="")
plot!(xaxis = L"\mathrm{\kappa(\mathbf{H})}", yaxis = L"\mathrm{\kappa(\mathbf{H_{T}})}",
titlefontsize=10, fontfamily="Palatino")
```
